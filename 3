class Point {
    constructor(public x: number, public y: number) {}
}

class Line {
    constructor(public start: Point, public end: Point) {}
}
function doLinesIntersect(line1: Line, line2: Line): boolean {
    const p1 = line1.start;
    const p2 = line1.end;
    const p3 = line2.start;
    const p4 = line2.end;
 
    const orientation = (p: Point, q: Point, r: Point): number => {
        const value = (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);
        if (value === 0) return 0; 
        return (value > 0) ? 1 : 2; 
    };

    const onSegment = (p: Point, q: Point, r: Point): boolean => {
        return (q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) &&
                q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y));
    };

    const o1 = orientation(p1, p2, p3);
    const o2 = orientation(p1, p2, p4);
    const o3 = orientation(p3, p4, p1);
    const o4 = orientation(p3, p4, p2);

    if (o1 !== o2 && o3 !== o4) {
        return true;
    }

    if (o1 === 0 && onSegment(p1, p3, p2)) return true;
    if (o2 === 0 && onSegment(p1, p4, p2)) return true;
    if (o3 === 0 && onSegment(p3, p1, p4)) return true;
    if (o4 === 0 && onSegment(p3, p2, p4)) return true;
    return false; 
}

const line1 = new Line(new Point(1, 1), new Point(4, 4));
const line2 = new Line(new Point(1, 4), new Point(4, 1));

console.log(doLinesIntersect(line1, line2));
